{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DRAKSHI\\\\OneDrive\\\\Documents\\\\Projects\\\\react-card-listing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CardList from './components/CardList';\nimport FilterDropdown from './components/FilterDropdown';\nimport SearchBar from './components/SearchBar';\nimport Tabs from './components/Tabs';\nimport mockData from './Data/mockData';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('');\n  const [activeTab, setActiveTab] = useState('Your');\n  useEffect(() => {\n    // Simulating API call to fetch data\n    // Replace with your actual API call\n    const filteredData = mockData.filter(card => {});\n    //console.log(mockData.data.owner_id === 1);\n  }, []);\n  useEffect(() => {\n    // Filter cards based on search term and card type\n    const filtered = cards.filter(card => {\n      const nameMatch = card.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const typeMatch = filterType === '' || card.card_type === filterType;\n      return nameMatch && typeMatch;\n    });\n    setFilteredCards(filtered);\n  }, [cards, searchTerm, filterType]);\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleFilterChange = event => {\n    setFilterType(event.target.value);\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n\n    // Filter cards based on owner_id when tab is clicked\n    const filtered = cards.filter(card => {\n      if (tab === 'Your') {\n        // Filter cards belonging to the user (owner_id 1)\n        return card.owner_id === 1;\n      } else if (tab === 'all') {\n        // Show all cards\n        return true;\n      } else if (tab === 'blocked') {\n        // Filter cards with status 'blocked'\n        return card.status === 'blocked';\n      }\n      return false;\n    });\n    setFilteredCards(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      activeTab: activeTab,\n      onTabChange: handleTabChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n      filterType: filterType,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      value: searchTerm,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      cards: filteredCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KYPz4JjfXfE8xaRX+x1/0RUgvUY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CardList","FilterDropdown","SearchBar","Tabs","mockData","jsxDEV","_jsxDEV","App","_s","cards","setCards","filteredCards","setFilteredCards","searchTerm","setSearchTerm","filterType","setFilterType","activeTab","setActiveTab","filteredData","filter","card","filtered","nameMatch","name","toLowerCase","includes","typeMatch","card_type","handleSearchChange","event","target","value","handleFilterChange","handleTabChange","tab","owner_id","status","className","children","onTabChange","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/DRAKSHI/OneDrive/Documents/Projects/react-card-listing/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardList from './components/CardList';\nimport FilterDropdown from './components/FilterDropdown';\nimport SearchBar from './components/SearchBar';\nimport Tabs from './components/Tabs';\nimport mockData from './Data/mockData';\n\nimport './App.css';\n\nconst App = () => {\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('');\n  const [activeTab, setActiveTab] = useState('Your');\n\n  useEffect(() => {\n    // Simulating API call to fetch data\n    // Replace with your actual API call\n     const filteredData = mockData.filter((card) => {\n\n     })\n    //console.log(mockData.data.owner_id === 1);\n  }, []);\n\n  useEffect(() => {\n    // Filter cards based on search term and card type\n    const filtered = cards.filter((card) => {\n      const nameMatch = card.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const typeMatch = filterType === '' || card.card_type === filterType;\n      return nameMatch && typeMatch;\n    });\n    setFilteredCards(filtered);\n  }, [cards, searchTerm, filterType]);\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilterType(event.target.value);\n  };\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n\n    // Filter cards based on owner_id when tab is clicked\n    const filtered = cards.filter((card) => {\n      if (tab === 'Your') {\n        // Filter cards belonging to the user (owner_id 1)\n        return card.owner_id === 1;\n      } else if (tab === 'all') {\n        // Show all cards\n        return true;\n      } else if (tab === 'blocked') {\n        // Filter cards with status 'blocked'\n        return card.status === 'blocked';\n      }\n      return false;\n    });\n\n    setFilteredCards(filtered);\n  };\n\n  return (\n    <div className=\"App\">\n      <Tabs activeTab={activeTab} onTabChange={handleTabChange} />\n      <FilterDropdown filterType={filterType} onChange={handleFilterChange} />\n      <SearchBar value={searchTerm} onChange={handleSearchChange} />\n      <CardList cards={filteredCards} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}